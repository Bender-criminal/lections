version: "3"
services:

  db:
    image: postgres
    ports:
      - 5432:5432
#    env_file:
#      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_BD=docker-test
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - net

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - 9092:9092
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_LOG4J_ROOT_LOGLEVEL=WARN
      - KAFKA_TOOLS_LOG4J_LOGLEVEL=WARN
      - KAFKA_LOG4J_LOGGERS=kafka=WARN,state.change.logger=WARN,kafka.controller=WARN
    depends_on:
      - zookeeper
    networks:
      - net

  kafka-create-topics:
    image: confluentinc/cp-kafka:latest
    restart: on-failure
    depends_on:
      - kafka
    command: |
      bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b kafka:9092 1 20 && \
      kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic company && \
      exit'
    environment:
      - KAFKA_BROKER_ID=ignored
      - KAFKA_ZOOKEEPER_CONNECT=ignored
    networks:
      - net

networks:
  net: {}

volumes:
  pgdata: